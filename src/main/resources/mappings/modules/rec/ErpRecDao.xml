<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.rec.dao.ErpRecDao">
    
	<sql id="erpRecColumns">
		a.id AS "id",
		a.no AS "no",
		a.dep AS "dep",
		a.vendor AS "vendor",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="erpRecJoins">
	</sql>
    
	<select id="get" resultType="ErpRec">
		SELECT 
			<include refid="erpRecColumns"/>
		FROM erp_rec a
		<include refid="erpRecJoins"/>
		WHERE a.id = #{id}
	</select>
	
	
	<resultMap type="com.thinkgem.jeesite.modules.rec.entity.ErpRec" id="ErpRecResultMap">
		<id property="id" column="id" />
		<result property="id" column="id" />
		<result property="no" column="no" />
		<result property="amtrp" column="amtrp" />
		<result property="amtsp" column="amtsp" />
		<result property="createDate" column="createDate" />
		<result property="updateDate" column="updateDate" />
		<result property="remarks" column="remarks" />
		<result property="delFlag" column="delFlag" />
		<result property="auditFlag" column="auditFlag" />
	    <result property="depid" column="depid" />
		<result property="depdesc" column="depdesc" />
		<result property="vendorid" column="vendorid" />
		<result property="vendordesc" column="vendordesc" />
		<!-- 入库科室 -->
		<!-- property对应一对多查询中实体类对应的属性，javaType此属性对应的实体类 -->
		<!-- property对应实体类中的属性名称  column对应sql语句中的字段名称(即xml中select中的字段名称，如果有as别名 则为as之后的别名)，
		                                      可以有别名，如果无别名则对应表结构定义中的字段名称 -->
		<!-- <association property="dep" javaType="com.thinkgem.jeesite.modules.erpdepartments.entity.ErpDepartments">
			<id property="id" column="depid" />
			<result property="departmentCode" column="departmentCode" />
			<result property="departmentDesc" column="departmentDesc" />
		</association>
		
		入库供货商
		<association property="vendor" javaType="com.thinkgem.jeesite.modules.erpvendor.entity.ErpVendor">
			<id property="id" column="vendorid" />
			<result property="vendorCode" column="vendorCode" />
			<result property="vendorDesc" column="vendorDesc" />
		</association> -->
		<!-- 制单人 -->
		<association property="createBy" javaType="com.thinkgem.jeesite.modules.sys.entity.User">
			<id property="id" column="createBy.id" />
			<result property="name" column="createByName" />
		</association>
		<!-- 审核人 -->
		<association property="auditBy" javaType="com.thinkgem.jeesite.modules.sys.entity.User">
			<id property="id" column="auditBy.id" />
			<result property="name" column="auditBy.name" />
		</association>
		<!-- 更新人 -->
		<association property="updateBy" javaType="com.thinkgem.jeesite.modules.sys.entity.User">
			<id property="id" column="updateBy.id" />
			<result property="name" column="updateBy.id" />
		</association> 
	</resultMap>
	
	
	<select id="findErpRecById" parameterType="String" resultMap="ErpRecResultMap">
		select  rec.id as id,
		        rec.no as no,
				bdep.id as depid,
				bdep.department_desc as depdesc,
				bvendor.id as vendorid,
				bvendor.vendor_desc as vendordesc,
				createruser.login_name as "createBy.id",     <!-- //暂时使用id作为姓名，应该在基类DataEntity添加名称属性 -->
				rec.create_date as "createDate",
				updateuser.login_name as "updateBy.id",
				rec.update_date as "updateDate",
				rec.remarks AS "remarks",
				rec.del_flag AS "delFlag"
				        
		  from  erp_rec rec,               
				erp_department bdep,              
				erp_vendor bvendor,
				sys_user createruser,
	            sys_user updateuser        
		 where  rec.dep=bdep.id          
				and rec.vendor=bvendor.id
				and rec.create_by=createruser.id 
	            and rec.update_by=updateuser.id
	            <if test="id != null and id != ''">
				   and rec.id=#{id}
			    </if> 
	</select>
	
	
	<select id="findList" resultMap="ErpRecResultMap">
	<![CDATA[	
       select   t.id,
                t.no,
                t.did,
				t.departmentId as depid,
				t.departmentDesc as depdesc,
				t.vendorid as vendorid,
				t.vendorDesc as vendordesc,
				t.amtrp,
				t.amtsp,
				t.createBy as "createBy.id",    
				t.createDate,
				t.updateBy as "updateBy.id",
				t.updateDate,
				t.auditBy as "auditBy.id",
				t.auditDate,
				t.remarks,
				t.delFlag,
				t.auditFlag 
  
          from (    
			        select  rec.id as id,rec.no as no,bdep.id as did,
			                bdep.id as departmentId,
							bdep.department_code as departmentCode,
							bdep.department_desc as departmentDesc,
							bvendor.id as vendorid,
							bvendor.vendor_code as vendorCode,
							bvendor.vendor_desc as vendorDesc,
							rec.amtrp as amtrp,
							rec.amtsp as amtsp,
							createruser.login_name as "createBy",    
							rec.create_date as "createDate",
							updateuser.login_name as "updateBy",
							rec.update_date as "updateDate",
							"" as "auditBy",
							rec.audit_date as "auditDate",
							rec.remarks AS "remarks",
							rec.del_flag AS "delFlag",
							rec.audit_flag as "auditFlag"        
					  from  erp_rec rec,               
							erp_department bdep,              
							erp_vendor bvendor,
							sys_user createruser,
				            sys_user updateuser    
					 where  rec.dep=bdep.id          
							and rec.vendor=bvendor.id
							and rec.create_by=createruser.id 
				            and rec.update_by=updateuser.id 
			                and rec.audit_flag='N'
			
			UNION ALL
			        select  rec.id as id,rec.no as no,bdep.id as did,
			                bdep.id as departmentId,
							bdep.department_code as departmentCode,
							bdep.department_desc as departmentDesc,
							bvendor.id as vendorid,
							bvendor.vendor_code as vendorCode,
							bvendor.vendor_desc as vendorDesc,
							rec.amtrp as amtrp,
							rec.amtsp as amtsp,
							createruser.login_name as "createBy",    
							rec.create_date as "createDate",
							updateuser.login_name as "updateBy",
							rec.update_date as "updateDate",
							audituser.login_name as "auditBy",
							rec.audit_date as "auditDate",
							rec.remarks AS "remarks",
							rec.del_flag AS "delFlag",
							rec.audit_flag as "auditFlag"        
					  from  erp_rec rec,               
							erp_department bdep,              
							erp_vendor bvendor,
							sys_user createruser,
				            sys_user updateuser,
			                sys_user audituser      
					 where  rec.dep=bdep.id          
							and rec.vendor=bvendor.id
							and rec.create_by=createruser.id 
				            and rec.update_by=updateuser.id 
			                and rec.audit_by=audituser.id

     )as t
  ]]>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY t.updatedate DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ErpRec">
		SELECT
			<include refid="erpRecColumns"/>
		FROM erp_rec a
		<include refid="erpRecJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO erp_rec(
			id,
			no,
			dep,
			vendor,
			amtrp,
			amtsp,
			create_by,
			create_date,
			audit_by,
			audit_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			audit_flag
		) VALUES (
			#{id},
			#{no},
			#{depid},
			#{vendorid},
			#{amtrp},
			#{amtsp},
			#{createBy.id},
			#{createDate},
			#{auditBy.id},
			#{auditDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{auditFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE erp_rec SET 	
			no = #{no},
			dep = #{depid},
			vendor = #{vendorid},
			amtrp=#{amtrp},
			amtsp=#{amtsp},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		delete from erp_rec
		WHERE id = #{id}
	</update>
	
	<!-- 获取最大的入库编号 -->
	<select id="GetMaxNo"  parameterType="java.util.Map" statementType="CALLABLE">
		{call GetMaxNo(
		      #{prefix,mode=IN,jdbcType=VARCHAR},
		      #{num,mode=IN,jdbcType=VARCHAR},
		      #{OrderNo,mode=OUT,jdbcType=VARCHAR}
		    )
		 }
	</select>
	
	
	<!-- 入库审核存储过程执行 -->

	<select id="AuditRecById"  parameterType="java.util.Map" statementType="CALLABLE">
		{call erp_audit_rec(
		      #{rid,mode=IN,jdbcType=VARCHAR},
		      #{audituser,mode=IN,jdbcType=VARCHAR},
		      #{msg,mode=OUT,jdbcType=VARCHAR}
		    )
		 }
	</select>


</mapper>